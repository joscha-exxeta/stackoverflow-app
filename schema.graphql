type Answer {
  _id: ID!
  body: String!
  comments: [Comment]
  downvotes: Int!
  questionId: ID!
  upvotes: Int!
}

input AnswerInput {
  body: String!
  questionId: ID!
}

type Comment {
  _id: ID!
  attachedTo: ID!
  body: String!
}

input CommentInput {
  attachedTo: ID!
  body: String!
}

type Mutation {
  addAnswer(answer: AnswerInput!): Answer!
  addComment(comment: CommentInput!): Comment!
  createQuestion(question: QuestionInput!): Question!
  downvoteAnswer(vote: VoteInput!): Answer!
  downvoteQuestion(vote: VoteInput!): Question!
  upvoteAnswer(vote: VoteInput!): Answer!
  upvoteQuestion(vote: VoteInput!): Question!
}

type Query {
  question(_id: ID!): Question
  questions: [Question!]!
}

type Question {
  _id: ID!
  answers: [Answer]
  body: String!
  comments: [Comment]
  downvotes: Int!
  title: String!
  upvotes: Int!
}

input QuestionInput {
  body: String!
  title: String!
}

input VoteInput {
  attachedTo: ID!
  number: Int!
}
